{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAOMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAiBJ,IALF,IAAMC,EAAOC,OAAOH,EAAMI,cAAcC,SAASH,KAAKI,OAChDC,EAASJ,OAAOH,EAAMI,cAAcC,SAASE,OAAOD,OACtDE,EAAQL,OAAOH,EAAMI,cAAcC,SAAShB,MAAMiB,OAG3CG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EAErDtB,EAAcsB,EADdD,GAASN,GAENQ,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OACpE2B,QAAMC,IAAI,uBAAwCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE3D6B,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOM,QAAQ,sBAAuCJ,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OACnE2B,QAAMC,IAAI,sBAAuCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n    \n  });\n  \n}\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  // let { delay: {\n  //   value: delay\n  // },\n  //   step: {\n  //     value: step\n  //   }, \n  //   amount: {\n  //     value: amount\n  //   } } = event.currentTarget.elements;\n\n  const step = Number(event.currentTarget.elements.step.value);\n  const amount = Number(event.currentTarget.elements.amount.value);\n  let delay = Number(event.currentTarget.elements.delay.value);\n  // let position = 0;\n\n    for (let position = 1; position <= amount; position += 1) {\n      delay += step;\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n\n  // const id = setInterval(() => {\n  //   position += 1;\n  //   delay += step;\n  //   createPromise(position, delay)\n  //     .then(({ position, delay }) => {\n  //       // Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     })\n  //     .catch(({ position, delay }) => {\n  //       // Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  //       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     });\n    \n\n  //   if (position === amount) {\n  //     clearInterval(id);\n  //     return;\n  //   }\n  // }, delay)\n  \n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","step","Number","currentTarget","elements","value","amount","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.eed57995.js.map"}