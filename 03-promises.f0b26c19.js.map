{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAOAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAYN,MAAMC,EAAOC,OAAOH,EAAMI,cAAcC,SAASH,KAAKI,OAChDC,EAASJ,OAAOH,EAAMI,cAAcC,SAASE,OAAOD,OAC1D,IAAIE,EAAQL,OAAOH,EAAMI,cAAcC,SAAShB,MAAMiB,OAGpD,IAAK,IAAIG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDD,GAASN,EACTf,EAAcsB,EAAUD,GACrBE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,OAC5DyB,QAAMC,IAAI,uBAAqB3B,QAAiBC,MAAU,IAE7D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOK,QAAQ,sBAAoB7B,QAAiBC,OAC3DyB,QAAMC,IAAI,sBAAoB3B,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n    \n  });\n  \n}\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  // let { delay: {\n  //   value: delay\n  // },\n  //   step: {\n  //     value: step\n  //   }, \n  //   amount: {\n  //     value: amount\n  //   } } = event.currentTarget.elements;\n\n  const step = Number(event.currentTarget.elements.step.value);\n  const amount = Number(event.currentTarget.elements.amount.value);\n  let delay = Number(event.currentTarget.elements.delay.value);\n  // let position = 0;\n\n    for (let position = 1; position <= amount; position += 1) {\n      delay += step;\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n\n  // const id = setInterval(() => {\n  //   position += 1;\n  //   delay += step;\n  //   createPromise(position, delay)\n  //     .then(({ position, delay }) => {\n  //       // Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     })\n  //     .catch(({ position, delay }) => {\n  //       // Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  //       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     });\n    \n\n  //   if (position === amount) {\n  //     clearInterval(id);\n  //     return;\n  //   }\n  // }, delay)\n  \n}\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","step","Number","currentTarget","elements","value","amount","delay1","position1","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.f0b26c19.js.map"}